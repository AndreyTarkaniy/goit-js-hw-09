{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,QAEpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAIPF,EAAc,EAAG,MACdS,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBS,QAAQC,IAAI,uBAAwCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,IAE3DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBS,QAAQC,IAAI,sBAAuCC,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,IAG7DL,EAAKkB,iBAAiB,UAEtB,SAAuBC,G,kBAYnBV,YAAW,WACTN,EAAciB,EAAUC,GACrBT,MAAK,SAAAC,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MACjBP,EAAAwB,OAAOC,QAAQ,uBAAwCP,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,IAE9DY,OAAM,SAAAJ,G,IAAGT,EAAQS,EAART,SAAUC,EAAKQ,EAALR,MAClBP,EAAAwB,OAAOE,QAAQ,sBAAqCR,OAAfZ,EAAS,QAAYY,OAANX,EAAM,O,IAE9DgB,GAASI,C,GACRJ,E,EApBLF,EAAMO,iBAEN,IAAIL,EAAQM,OAAOR,EAAMS,OAAOvB,MAAMwB,OAClCJ,EAAOE,OAAOR,EAAMS,OAAOH,KAAKI,OAChCC,EAASH,OAAOR,EAAMS,OAAOE,OAAOD,OAExCf,QAAQC,IAAIM,GACZP,QAAQC,IAAIU,GACZX,QAAQC,IAAIe,GAEZ,IAAK,IAAIC,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EAACC,EAAAD,GAaxD/B,EAAKiC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form');\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay} ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay} ms`);\n  });\n\nform.addEventListener('submit', formBtnSubmit);\n\nfunction formBtnSubmit(event) {\n  event.preventDefault();\n\n  let delay = Number(event.target.delay.value);\n  let step = Number(event.target.step.value);\n  let amount = Number(event.target.amount.value);\n\n  console.log(delay);\n  console.log(step);\n  console.log(amount);\n\n  for (let position = 1; position <= amount; position += 1) {\n    setTimeout(() => {\n      createPromise(position, delay)\n        .then(({ position, delay }) => {\n          Notify.success(`✅ Fulfilled promise ${position} in ${delay} ms`);\n        })\n        .catch(({ position, delay }) => {\n          Notify.failure(`❌ Rejected promise ${position} in ${delay} ms`);\n        });\n      delay += step;\n    }, delay);\n  }\n\n  form.reset();\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","then","param","console","log","concat","catch","addEventListener","event","position1","delay1","Notify","success","failure","step","preventDefault","Number","target","value","amount","position11","_loop","reset"],"version":3,"file":"03-promises.f43f8f1b.js.map"}